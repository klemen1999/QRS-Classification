function [classifications] = QRSCluster(record, beats, Fs)
    signalFileName = sprintf("%sm.mat", record);
    S = load(signalFileName);
    sig = S.val(1,:);
    Fc = 2;
    fsig = HPFilter(sig, Fc, 1/Fs);

    limLower = floor(Fs*0.06);
    limUpper = round(Fs*0.1);
    fpPoints = beats(:,1);
    
    X = [];
    addExtra = false;
    for i=1:length(fpPoints)
        currFp = fpPoints(i);
        if currFp+limUpper <= length(fsig)
            currBeat = fsig(currFp-limLower:currFp+limUpper);
            X = [X;currBeat];
        else
            addExtra = true;
        end
    end
    
    [idx1,c1] =kmeans(X, 1);
    WSS1 = 1/sum(idx1==1) * sum(sum(((X - c1).^2),2));
    disp(WSS1);

    [idx,c2] = kmeans(X,2);
    WSS2 = [];
    disp(c2(2))
    for i=1:2
        currX = X(idx==i,:);
        currC = c2(i);
        WSScurr = 1/sum(idx1==i) * sum(sum(((currX - currC).^2),2));
        WSS2 = [WSS2, WSScurr];
    end
    disp(WSS2);
end

